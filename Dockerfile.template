FROM rmoorexcelion/synaps-base:latest

RUN echo deb http://http.debian.net/debian jessie-backports main contrib non-free > /etc/apt/sources.list.d/jessie-backports.list
RUN apt-get update
RUN sudo apt-get install --target-release jessie-backports \
  linux-image-amd64 \
  firmware-misc-nonfree \
  xserver-xorg-video-intel \
  libegl1-mesa \
  libgl1-mesa-glx \
  libgl1-mesa-dri \
  libegl1-mesa \
  libegl1-mesa-drivers \
  libgl1-mesa-dri \
  libgl1-mesa-glx \
  libglapi-mesa \
  libgles1-mesa \
  libgles2-mesa \
  libglu1-mesa \
  libopenvg1-mesa \
  libtxc-dxtn-s2tc0 \
  mesa-utils \
  mesa-utils-extra \
  libva-drm1 \
  libgl1-mesa-dev \
  libglu1-mesa-dev \
  freeglut3-dev

# Move to app dir
WORKDIR /usr/app

# Set Xorg and FLUXBOX preferences
RUN mkdir -p ~/.fluxbox
RUN echo "xset s off" > ~/.fluxbox/startup && echo "xserver-command=X -s 0 dpms" >> ~/.fluxbox/startup
RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nocursor -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc

# Move package.json to filesystem
RUN mkdir /usr/app/electron
WORKDIR /usr/app/electron
COPY ./electron/package.json ./

# Install npm modules for the application
RUN JOBS=MAX npm install --unsafe-perm --production \
	&& npm cache clean --force 
	#&& node_modules/.bin/electron-rebuild

COPY ./electron .

# tensorflow / dlib models
RUN mkdir /usr/app/video-analysis
WORKDIR /usr/app/video-analysis
RUN wget -O archive.zip https://s3.amazonaws.com/synaps-data/Archive.zip
RUN unzip archive.zip
RUN rm archive.zip
COPY ./video-analysis .

# socket
RUN mkdir /usr/app/socket
COPY ./socket /usr/app/socket
WORKDIR /usr/app/socket
RUN JOBS=MAX npm install --unsafe-perm --production \
	&& npm cache clean --force 

# web
COPY ./web /var/www/html

# bash
COPY ./bash /usr/bash
COPY ./start.sh /usr/
RUN chmod 777 /usr/start.sh

# run startup script...
ENV INITSYSTEM on
WORKDIR /usr
CMD ["bash", "start.sh"]
